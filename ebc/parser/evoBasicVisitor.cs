//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/sources/evobasic-project-antlr/ebc\evoBasic.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="evoBasicParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IevoBasicVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDocument([NotNull] evoBasicParser.DocumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] evoBasicParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.declarationNoAccessFlag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationNoAccessFlag([NotNull] evoBasicParser.DeclarationNoAccessFlagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.ctorDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCtorDecl([NotNull] evoBasicParser.CtorDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.extendPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtendPart([NotNull] evoBasicParser.ExtendPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDecl([NotNull] evoBasicParser.ClassDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.implPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplPart([NotNull] evoBasicParser.ImplPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.moduleDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModuleDecl([NotNull] evoBasicParser.ModuleDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.dimDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDimDecl([NotNull] evoBasicParser.DimDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.typeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDecl([NotNull] evoBasicParser.TypeDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.enumDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumDecl([NotNull] evoBasicParser.EnumDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.enumConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumConstant([NotNull] evoBasicParser.EnumConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.externalFunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalFunc([NotNull] evoBasicParser.ExternalFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.externalSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalSub([NotNull] evoBasicParser.ExternalSubContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.importDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportDecl([NotNull] evoBasicParser.ImportDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecl([NotNull] evoBasicParser.FunctionDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.subDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubDecl([NotNull] evoBasicParser.SubDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] evoBasicParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] evoBasicParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.accessFlag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessFlag([NotNull] evoBasicParser.AccessFlagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.methodFlag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodFlag([NotNull] evoBasicParser.MethodFlagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] evoBasicParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.throwStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStmt([NotNull] evoBasicParser.ThrowStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.tryStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryStmt([NotNull] evoBasicParser.TryStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.catchPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchPart([NotNull] evoBasicParser.CatchPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] evoBasicParser.ForStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.forIterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForIterator([NotNull] evoBasicParser.ForIteratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.dimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDimStmt([NotNull] evoBasicParser.DimStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.variableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDecl([NotNull] evoBasicParser.VariableDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.loopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStmt([NotNull] evoBasicParser.LoopStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.onelineIfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOnelineIfStmt([NotNull] evoBasicParser.OnelineIfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] evoBasicParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.elseIfPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfPart([NotNull] evoBasicParser.ElseIfPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.elsePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElsePart([NotNull] evoBasicParser.ElsePartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.selectStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectStmt([NotNull] evoBasicParser.SelectStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.caseList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseList([NotNull] evoBasicParser.CaseListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.controlStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControlStmt([NotNull] evoBasicParser.ControlStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStmt([NotNull] evoBasicParser.ExprStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] evoBasicParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] evoBasicParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] evoBasicParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpression([NotNull] evoBasicParser.ConditionalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.conditionalNotExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalNotExpression([NotNull] evoBasicParser.ConditionalNotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] evoBasicParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.relationalOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalOp([NotNull] evoBasicParser.RelationalOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] evoBasicParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] evoBasicParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] evoBasicParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryTerminal</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryTerminal([NotNull] evoBasicParser.PrimaryTerminalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArraySubscription</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySubscription([NotNull] evoBasicParser.ArraySubscriptionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DotExpression</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotExpression([NotNull] evoBasicParser.DotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IsExpression</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsExpression([NotNull] evoBasicParser.IsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OptionalTestExpression</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalTestExpression([NotNull] evoBasicParser.OptionalTestExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NewExpression</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExpression([NotNull] evoBasicParser.NewExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MethodInvocation</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodInvocation([NotNull] evoBasicParser.MethodInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="evoBasicParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpression([NotNull] evoBasicParser.CastExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.typePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypePath([NotNull] evoBasicParser.TypePathContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.terminalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminalExpression([NotNull] evoBasicParser.TerminalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntegerLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteral([NotNull] evoBasicParser.IntegerLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DoubleLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoubleLiteral([NotNull] evoBasicParser.DoubleLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteral([NotNull] evoBasicParser.StringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RuneLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuneLiteral([NotNull] evoBasicParser.RuneLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BooleanLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] evoBasicParser.BooleanLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteral([NotNull] evoBasicParser.ArrayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NothingLiteral</c>
	/// labeled alternative in <see cref="evoBasicParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNothingLiteral([NotNull] evoBasicParser.NothingLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.ltOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLtOp([NotNull] evoBasicParser.LtOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.leOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeOp([NotNull] evoBasicParser.LeOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.eqOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqOp([NotNull] evoBasicParser.EqOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.geOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeOp([NotNull] evoBasicParser.GeOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.gtOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGtOp([NotNull] evoBasicParser.GtOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.neOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNeOp([NotNull] evoBasicParser.NeOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.divOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivOp([NotNull] evoBasicParser.DivOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.mulOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulOp([NotNull] evoBasicParser.MulOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.plusOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlusOp([NotNull] evoBasicParser.PlusOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.minusOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinusOp([NotNull] evoBasicParser.MinusOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] evoBasicParser.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] evoBasicParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotation([NotNull] evoBasicParser.AnnotationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.subScriptSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubScriptSuffix([NotNull] evoBasicParser.SubScriptSuffixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="evoBasicParser.newline"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewline([NotNull] evoBasicParser.NewlineContext context);
}
