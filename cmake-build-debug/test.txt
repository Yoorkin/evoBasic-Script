Module myModule
    public class MyClass

    end class
    public class MyClass
/*
        function myFunction(byval a4 as long)AS byte //commentasdfasdfsd
            return 1+5-10/9-(100*3.1415e-10+13E10)
        end function*/

        public sub mySub(p as int)
            if p>=100 then
                myFunction(100)
                if p.toString()==100 then
                    print(123455)
                end if
            elseif p<90 then
                path1.path2.anotherFunction(20)
            else
                mySub(p-10)
            end if
            let state = print(obj.myFunction(p-10).toString(),100)
            while state<>someEnum.Succeed
                print(234234)
            wend
            select case
                casr asdfsdaf
                    print(233)
                case asdf
                    for i=0 to state.data.size step 1
                        if state.data.onError then exit for end if
                        print(state.data(i)+1+2+3+4+5+-6+---7++8---9)
                    next
            end select
        end sub
    end class

    type MyType
        member1 as integer
        member2 as long
    end type

    type myType
        member1 as integer
        member2 as long
    end type

    private enum MyEnum
        member1=10

            member2
    end enum

    private enum MyEnum
        member1=10

            member2
    end enum

    public let a = 100,c=100\8+5.5


    public module myModule2

    end module

End Module

Module myModule

end module