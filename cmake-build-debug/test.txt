Module myModule

    public class MyClass

        function myFunction(byval a4 as long)AS byte //commentasdfasdfsd
            return /*comment comment2*/1+5-10/9-(100*3.1415e-10+13E10)
        end function

        public virtual sub mySub(p as int)
            if p>=100 then
                myFunction(100)
            elseif p<90 then
                path1.path2.anotherFunction(20)
            else
                mySub(p-10)
            end if
            let state = print(obj.myFunction(p-10).toString(),100)
            while state<>someEnum.Succeed
                print("啦啦啦")
            wend
            select case state
                case someEnum.succeed print("ok")
                case else
                    for i=0 to state.data.size step 1
                        if state.data.onError then exit for end if
                        print(state.data(i)+1+2+3+4+5+-6+---7++8---9)
                    next
            end select
        end sub
    end class

    type MyType
        member1 as integer
        member2 as long
    end type

    private enum MyEnum
        member1=10

            member2
    end enum

    let a = 100,b as string="string test",c=100\8+5.5


    module myModule2

    end module
End Module